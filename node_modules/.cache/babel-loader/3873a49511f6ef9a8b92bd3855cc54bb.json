{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nconst initialState = {\n  latitude: \"\",\n  longitude: \"\"\n};\n\nconst useMap = () => {\n  _s();\n\n  const [position, setPosition] = useState(initialState);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(onSuccess, onError, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 3000\n      });\n\n      function onSuccess(position) {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setPosition({\n          latitude,\n          longitude\n        });\n      }\n\n      function onError(error) {\n        console.log(\"Error\", error.code);\n      }\n    } else {\n      setPosition({\n        latitude: -23.5379201,\n        longitude: -46.6732467\n      });\n    }\n  }, []);\n  return {\n    position\n  };\n};\n\n_s(useMap, \"ZN60T2aakWSS6kwFBpaMGb89BRc=\");\n\nexport default useMap;","map":{"version":3,"sources":["/Users/vntdipi/Desktop/Venturus/fretado/src/components/useMap/index.js"],"names":["useEffect","useState","initialState","latitude","longitude","useMap","position","setPosition","navigator","geolocation","watchPosition","onSuccess","onError","enableHighAccuracy","timeout","maximumAge","coords","error","console","log","code"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,SAAS,EAAC;AAFO,CAArB;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAACC,YAAD,CAAvC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,SAAS,CAACC,WAAd,EAA0B;AACtBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoCC,SAApC,EAA8CC,OAA9C,EAAuD;AACnDC,QAAAA,kBAAkB,EAAE,IAD+B;AAEnDC,QAAAA,OAAO,EAAE,KAF0C;AAGnDC,QAAAA,UAAU,EAAE;AAHuC,OAAvD;;AAKA,eAASJ,SAAT,CAAmBL,QAAnB,EAA4B;AACxB,cAAM;AAAEH,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,YAA0BE,QAAQ,CAACU,MAAzC;AACAT,QAAAA,WAAW,CAAC;AACRJ,UAAAA,QADQ;AAERC,UAAAA;AAFQ,SAAD,CAAX;AAID;;AACD,eAASQ,OAAT,CAAiBK,KAAjB,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,IAA3B;AAEC;AACR,KAjBD,MAkBO;AACHb,MAAAA,WAAW,CAAC;AACRJ,QAAAA,QAAQ,EAAE,CAAC,UADH;AAERC,QAAAA,SAAS,EAAE,CAAC;AAFJ,OAAD,CAAX;AAID;AAEN,GA1BQ,EA0BP,EA1BO,CAAT;AA4BA,SAAO;AACHE,IAAAA;AADG,GAAP;AAGH,CAlCD;;GAAMD,M;;AAmCN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst initialState = {\n    latitude:\"\",\n    longitude:\"\"\n}\n\nconst useMap = () => {\n    const [position,setPosition] = useState(initialState)\n    \n    useEffect(() => {\n        if (navigator.geolocation){\n            navigator.geolocation.watchPosition(onSuccess,onError, {\n                enableHighAccuracy: true,\n                timeout: 10000,\n                maximumAge: 3000\n            }) \n            function onSuccess(position){\n                const { latitude, longitude } = position.coords\n                setPosition({\n                    latitude,\n                    longitude\n                })\n              }\n              function onError(error){\n                console.log(\"Error\", error.code)\n\n                }\n        }\n          else {\n            setPosition({\n                latitude: -23.5379201,\n                longitude: -46.6732467,\n            })\n          }\n         \n    },[])\n        \n    return {\n        position\n    }\n}\nexport default useMap"]},"metadata":{},"sourceType":"module"}