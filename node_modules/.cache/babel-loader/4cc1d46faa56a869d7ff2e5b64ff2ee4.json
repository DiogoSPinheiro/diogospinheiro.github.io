{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nconst initialState = {\n  latitude: \"\",\n  longitude: \"\"\n};\n\nconst useMap = () => {\n  _s();\n\n  const [position, setPosition] = useState(initialState);\n  useEffect(() => {\n    //if ('geolocation' in navigator){\n    function onSuccess(position) {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setPosition({\n        latitude,\n        longitude\n      });\n    }\n\n    function onError() {\n      setPosition(initialState);\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError); //  }\n  }, []);\n  return {\n    position\n  };\n};\n\n_s(useMap, \"ZN60T2aakWSS6kwFBpaMGb89BRc=\");\n\nexport default useMap;","map":{"version":3,"sources":["/Users/vntdipi/Desktop/Venturus/fretado/src/components/useMap/index.js"],"names":["useEffect","useState","initialState","latitude","longitude","useMap","position","setPosition","onSuccess","coords","onError","navigator","geolocation","getCurrentPosition"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,SAAS,EAAC;AAFO,CAArB;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAACC,YAAD,CAAvC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACI,aAASQ,SAAT,CAAmBF,QAAnB,EAA4B;AACxB,YAAM;AAAEH,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0BE,QAAQ,CAACG,MAAzC;AACAF,MAAAA,WAAW,CAAC;AACRJ,QAAAA,QADQ;AAERC,QAAAA;AAFQ,OAAD,CAAX;AAID;;AACD,aAASM,OAAT,GAAkB;AAChBH,MAAAA,WAAW,CAACL,YAAD,CAAX;AACD;;AACDS,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCL,SAAzC,EAAmDE,OAAnD,EAZM,CAad;AAGD,GAhBQ,EAgBP,EAhBO,CAAT;AAkBA,SAAO;AACHJ,IAAAA;AADG,GAAP;AAGH,CAxBD;;GAAMD,M;;AAyBN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst initialState = {\n    latitude:\"\",\n    longitude:\"\"\n}\n\nconst useMap = () => {\n    const [position,setPosition] = useState(initialState)\n    \n    useEffect(() => {\n        //if ('geolocation' in navigator){\n            function onSuccess(position){\n                const { latitude, longitude } = position.coords\n                setPosition({\n                    latitude,\n                    longitude\n                })\n              }\n              function onError(){\n                setPosition(initialState)\n              }\n              navigator.geolocation.getCurrentPosition(onSuccess,onError) \n      //  }\n          \n         \n    },[])\n        \n    return {\n        position\n    }\n}\nexport default useMap"]},"metadata":{},"sourceType":"module"}