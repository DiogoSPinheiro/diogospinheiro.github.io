{"ast":null,"code":"var _jsxFileName = \"/Users/vntdipi/Desktop/Venturus/fretado/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport React, { useState } from 'react';\nimport useMap from './components/useMap';\nimport Places from './places.json';\nimport userImage from \"./user.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport const MapContainer = () => {\n  _s();\n\n  const {\n    position\n  } = useMap();\n  const [markers, setMarkers] = useState(() => Places);\n  const [showInfo, setShowInfo] = useState(false);\n  const [activeMarker, setActiveMarker] = useState({});\n  const [selectedPlace, setSelectPlace] = useState({});\n\n  const mapClicked = (mapProps, map, clickEvent) => {\n    const lat = clickEvent.latLng.lat();\n    const lng = clickEvent.latLng.lng();\n    const place = {\n      latitude: lat,\n      longitude: lng\n    };\n    console.log(markers);\n  };\n\n  const markerClick = (props, marker) => {\n    setSelectPlace(marker);\n    setActiveMarker(marker);\n    setShowInfo(true);\n  };\n\n  const onClose = () => {\n    if (showInfo) {\n      setShowInfo(false);\n      setActiveMarker(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Map, {\n    google: window.google,\n    zoom: 14,\n    style: mapStyles,\n    initialCenter: {\n      lat: position.latitude,\n      lng: position.longitude\n    },\n    centerAroundCurrentLocation: true,\n    onClick: mapClicked,\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: position.latitude,\n        lng: position.longitude\n      },\n      title: \"Localiza\\xE7\\xE3o atual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      onClick: markerClick,\n      name: marker.name,\n      position: {\n        lat: marker.latitude,\n        lng: marker.longitude\n      },\n      cursor: \"pointer\",\n      animation: \"0\",\n      icon: {\n        url: userImage,\n        scaledSize: 0.05\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(InfoWindow, {\n      marker: selectedPlace,\n      visible: showInfo,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedPlace.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapContainer, \"2YEQLymJD5VwkyQ8qD1IJF7J6ys=\", false, function () {\n  return [useMap];\n});\n\n_c = MapContainer;\nexport default GoogleApiWrapper(props => ({\n  apiKey: process.env.REACT_GOOGLE_MAPS_API_KEY\n}))(MapContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/vntdipi/Desktop/Venturus/fretado/src/App.js"],"names":["Map","GoogleApiWrapper","Marker","InfoWindow","React","useState","useMap","Places","mapStyles","width","height","MapContainer","position","markers","setMarkers","showInfo","setShowInfo","activeMarker","setActiveMarker","selectedPlace","setSelectPlace","mapClicked","mapProps","map","clickEvent","lat","latLng","lng","place","latitude","longitude","console","log","markerClick","props","marker","onClose","window","google","index","name","url","userImage","scaledSize","apiKey","process","env","REACT_GOOGLE_MAPS_API_KEY"],"mappings":"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","sourcesContent":["\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport React, { useState } from 'react';\nimport useMap from './components/useMap';\nimport Places from './places.json'\nimport userImage from './user.svg'\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport const MapContainer = () => {\n  const { position } = useMap()\n  const [markers, setMarkers] = useState(() => Places)\n  const [showInfo, setShowInfo] = useState(false)\n  const [activeMarker, setActiveMarker] = useState({})\n  const [selectedPlace, setSelectPlace] = useState({})\n\n  const mapClicked = (mapProps, map, clickEvent) => {\n    const lat = clickEvent.latLng.lat()\n    const lng = clickEvent.latLng.lng()\n    const place = { latitude: lat, longitude: lng }\n    console.log(markers)\n  }\n  const markerClick = (props, marker) => {\n    setSelectPlace(marker)\n    setActiveMarker(marker)\n    setShowInfo(true)\n  }\n  const onClose = () => {\n    if (showInfo) {\n      setShowInfo(false)\n      setActiveMarker(null)\n    }\n  }\n\n\n  return (\n    <Map\n      google={window.google}\n      zoom={14}\n      style={mapStyles}\n      initialCenter={\n        {\n          lat: position.latitude,\n          lng: position.longitude\n        }\n      }\n      centerAroundCurrentLocation={true}\n      onClick={mapClicked}\n    >\n      <Marker\n        position={{ lat: position.latitude, lng: position.longitude }}\n        title=\"Localização atual\"\n      />\n      {markers.map((marker, index) => (\n\n        <Marker\n          onClick={markerClick}\n          key={index}\n          name={marker.name}\n          position={{ lat: marker.latitude, lng: marker.longitude }}\n          cursor=\"pointer\"\n          animation=\"0\"\n          icon={{ url: userImage, scaledSize: 0.05 }}\n        />\n      ))\n      }\n        <InfoWindow\n          marker={selectedPlace}\n          visible={showInfo}\n          onClose={onClose}\n         >\n           <div>\n             {selectedPlace.name}\n           </div>\n\n         </InfoWindow>\n        \n      </Map>\n  );\n}\n\n\n\nexport default GoogleApiWrapper(\n  (props) => ({\n    apiKey: process.env.REACT_GOOGLE_MAPS_API_KEY,\n  }\n  ))(MapContainer)\n"]},"metadata":{},"sourceType":"module"}